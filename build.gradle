//file:noinspection GroovyAssignabilityCheck
buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = '1.0.2'
version = "${minecraft_version}-${propellerhats_version}"
group = 'xyz.przemyk.propellerhats'
archivesBaseName = 'propellerhats'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'official', version: minecraft_version
    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            property 'mixin.debug.export', 'true'

            mods {
                propellerhats {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                propellerhats {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'propellerhats', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                propellerhats {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven { name = "Progwml6 maven"; url = "https://dvs1.progwml6.com/files/maven/" } //JEI
    maven { name = "blamejared";     url = "https://maven.blamejared.com" }
    maven { name = "ModMaven";       url = "https://modmaven.dev" }
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

//    implementation fg.deobf("curse.maven:charging-gadgets-399757:3955867")
    implementation fg.deobf("curse.maven:energized-power-782147:4573938")
//    compileOnly fg.deobf("mekanism:Mekanism:1.16.4-10.0.18.445:api")
//    runtimeOnly fg.deobf("mekanism:Mekanism:1.16.4-10.0.18.445")
//    runtimeOnly fg.deobf("mekanism:Mekanism:1.16.4-10.0.18.445:additions")
//    runtimeOnly fg.deobf("mekanism:Mekanism:1.16.4-10.0.18.445:generators")
//    runtimeOnly fg.deobf("mekanism:Mekanism:1.16.4-10.0.18.445:tools")

    compileOnly fg.deobf("mezz.jei:jei-${minecraft_version}-common-api:${jei_version}")
    compileOnly fg.deobf("mezz.jei:jei-${minecraft_version}-forge-api:${jei_version}")
    // at runtime, use the full JEI jar for Forge
    runtimeOnly fg.deobf("mezz.jei:jei-${minecraft_version}-forge:${jei_version}")
}

jar {
    manifest {
        attributes([
                "Specification-Title": project.name,
                "Specification-Vendor": "Przemyk",
                "Specification-Version": "1",
                "Implementation-Title": project.name,
                "Implementation-Version": project.version,
                "Implementation-Vendor": "Przemyk",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')